[project]
name = "my-rag-agent-from-gcs"
version = "0.1.0"
description = ""
authors = [
    {name = "Your Name", email = "your@email.com"},
]
dependencies = [
    "google-adk~=1.2.0",
    "langchain-google-vertexai~=2.0.7",
    "langchain~=0.3.24",
    "langchain-core~=0.3.55",
    "langchain-community~=0.3.17",
    "langchain-openai~=0.3.5",
    "langchain-google-community[vertexaisearch]~=2.0.7",
    "Jinja2~=3.1.6",
    "opentelemetry-exporter-gcp-trace~=1.9.0",
    "google-cloud-logging~=3.11.4",
    "google-cloud-aiplatform[evaluation,agent-engines]~=1.95.1"
]

requires-python = ">=3.10,<3.13"

[dependency-groups]
dev = [
    "pytest>=8.3.4",
    "pytest-asyncio>=0.23.8",
    "nest-asyncio>=1.6.0",
]

[project.optional-dependencies]

jupyter = [
    "jupyter~=1.0.0",
]
lint = [
    "ruff>=0.4.6",
    "mypy~=1.15.0",
    "codespell~=2.2.0",
    "types-pyyaml~=6.0.12.20240917",
    "types-requests~=2.32.0.20240914",
]

[tool.ruff]
line-length = 88
target-version = "py310"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle
    "F",   # pyflakes
    "W",   # pycodestyle warnings
    "I",   # isort
    "C",  # flake8-comprehensions
    "B",   # flake8-bugbear
    "UP", # pyupgrade
    "RUF", # ruff specific rules
]
ignore = ["E501", "C901"] # ignore line too long, too complex

[tool.ruff.lint.isort]
known-first-party = ["app", "frontend"]

[tool.mypy]
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
no_implicit_optional = true
check_untyped_defs = true
disallow_subclassing_any = true
warn_incomplete_stub = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_unreachable = true
follow_imports = "silent"
ignore_missing_imports = true
explicit_package_bases = true
disable_error_code = ["misc", "no-untyped-call", "no-any-return"]

exclude = [".venv"]

[tool.codespell]
ignore-words-list = "rouge"

skip = "./locust_env/*,uv.lock,.venv,**/*.ipynb"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"


[tool.pytest.ini_options]
pythonpath = "."
asyncio_default_fixture_loop_scope = "function"

[tool.hatch.build.targets.wheel]
packages = ["app","frontend"]
